#textdomain wesnoth-A_New_Order
[scenario]
    name = _ "Raedwood East"
    id=15c_Raedwood_East
    map_data="{~add-ons/A_New_Order/maps/RaedwoodEast.map}"
    next_scenario=16_Choosing_the_Best
    {INTRO_AND_SCENARIO_MUSIC silence.ogg elvish-theme.ogg}
    {EXTRA_SCENARIO_MUSIC theme_of_a_new_order.ogg}
    {EXTRA_SCENARIO_MUSIC elf-land.ogg}
    {EXTRA_SCENARIO_MUSIC breaking_the_chains.ogg}
    {EXTRA_SCENARIO_MUSIC journeys_end.ogg}
    {EXTRA_SCENARIO_MUSIC traveling_minstrels.ogg}
    {EXTRA_SCENARIO_MUSIC wanderer.ogg}
    {TURNS4 18 16 14 12}
    [story]
        [part]
            story=_"And so Gawen and his party went to the eastern part of Raedwood."
        [/part]
    [/story]
    {DAWN}
    {MORNING}
    {AFTERNOON}
    {DUSK}
    {FIRST_WATCH}
    {SECOND_WATCH}
    victory_when_enemies_defeated=yes # TODO: might want to remove this if I can think of a more interesting objective...
    [side]
        controller=human
        id=Gawen Hagarthen
        name=_"Gawen Hagarthen"
        type=Hagarthen
        profile=portraits/gawen_was.png
        team_name=good
        canrecruit=yes
        side=1
        facing=se
        {GOLD4 120 110 100 90}
        {INCOME4 2 1 0 -1}
    [/side]
    [side]
        controller=ai
        id=Velkon Elch
        name=_"Velkon Elch"
#ifdef NIGHTMARE
        type=Fire Dragon
#else
#ifdef HARD
        type=Drake Flameheart
#else
        type=Drake Flare
#endif
#endif
        team_name=firelovers
        canrecruit=yes
        side=2
        facing=ne
        recruit=Drake Burner,Fire Drake,Drake Clasher,Drake Fighter,Drake Glider,Dune Burner,Red Mage,Fire Ant,Fire Guardian,Jinn,Orcish Archer,Troll Shaman,Goblin Pillager
        {GOLD4 280 285 290 295}
        {INCOME4 2 4 6 8}
        [ai]
            recruitment_diversity={ON_DIFFICULTY4 6.6 5.5 4.4 3.3}
            recruitment_more="Drake Burner"
            [goal]
                [criteria]
                    race=wose
                [/criteria]
                value=6 # (unsure whehter an increasing or decreasing pattern makes more sense...)
            [/goal]
            [goal]
                [criteria]
                    side=1,2
                    [filter_location]
                        terrain=*^F*
                    [/filter_location]
                [/criteria]
                value=5
            [/goal] #
            [goal]
                name=target_location
                [criteria]
                    terrain=*^F*
                [/criteria]
                value=4
            [/goal]
            [goal]
                name=protect_unit
                [criteria]
                    side=2
                    id=Velkon Elch
                    canrecruit=yes
                [/criteria]
                protect_radius=2
                value=3
            [/goal]
            leader_aggression="-5.5"
#ifdef EASY
            villages_per_scout=2
#else
            villages_per_scout=3
#endif
            scout_village_targeting=4.4 # (scouts go for villages more)
            village_value={ON_DIFFICULTY4 0.6 0.7 0.8 0.9} # (everyone else goes for villages less)
        [/ai]
        # An attempt to prevent the enemy leader from suiciding too early:
        [ai]
            turns=1-2
            passive_leader=yes
        [/ai] #
    [/side]
    {STARTING_VILLAGES 2 {ON_DIFFICULTY4 4 5 6 8}} # (doesn't quite fit a pattern because we need to grab certain villages)
    # Limit level 2 recruits:
    {LIMIT_CONTEMPORANEOUS_RECRUITS 2 "Fire Drake" {ON_DIFFICULTY4 1 2 3 4}}
    {LIMIT_CONTEMPORANEOUS_RECRUITS 2 "Red Mage" {ON_DIFFICULTY4 1 2 3 4}}
    {LIMIT_CONTEMPORANEOUS_RECRUITS 2 Jinn {ON_DIFFICULTY4 1 2 3 4}}
    {LIMIT_CONTEMPORANEOUS_RECRUITS 2 "Troll Shaman" {ON_DIFFICULTY4 1 2 3 4}}
    {LIMIT_CONTEMPORANEOUS_RECRUITS 2 "Goblin Pillager" {ON_DIFFICULTY4 1 2 3 4}}

    [side]
        controller=ai
        id=Quësel
        name=_"Quësel"
#ifdef EASY
        type=Elvish Avenger
#else
        type=Elvish Ranger
#endif
        team_name=good # TODO: add chances for them to turn on you
        canrecruit=yes
        side=3
        facing=sw
        recruit=Elvish Archer,Elvish Fighter,Elvish Scout,Elvish Shaman,Wose Sapling
#ifdef DEBUG_MODE
        extra_recruit=Wose
#endif
        {GOLD4 190 180 170 160}
        {INCOME4 4 3 2 1}
        [ai]
#ifdef DEBUG_MODE
            # to test the wose death events better:
            recruitment_more="Wose Sapling"
#endif
            [goal]
                name=protect_location
                [criteria]
                    terrain=*^F*
                [/criteria]
                protect_radius=1
                value=7
            [/goal]
            grouping=defensive
            [avoid]
                # everything except castle, keep, village, forest, flowers
                terrain=!,C*,K*,*^V*,*^F*,*^Efm
            [/avoid]
        [/ai]
    [/side]

    [event]
        name=prestart
        {IF_HAVE_UNIT_ANY (Reme Carrenemoe)}
        {RECALL (Reme Carrenemoe)}
        {END_IF_WITHOUT_ELSE}
        {RECALL (Ruvio)}
        # The elves get all the elvish villages:
        {CAPTURE_VILLAGES_OF_TYPE Gg^Ve 3 19 4 4}
    [/event]

    [event]
        name=start
        {MESSAGE (Quësel) () (Quësel) "Help! The drakes are trying to burn down our forest!"}
        {RECALL (Karen)}
        {RECALL (Karl Regven)}
        {MSG_Karen _"Hello there! You missed me, of course?"}
        {MESSAGE (Karl Regven) (portraits/regven.png) (Karl Regven) _"Forgive me, my lord. I know how it looks, but I really was trying."}
        {MSGm_Gawen _"I was kind of expecting you."}
        [objectives]
            side=1
            [objective]
                description=_"Kill Velkon Elch"
                condition=win
            [/objective]
            [objective]
                description=_"Death of Ruvio"
                condition=lose
            [/objective]
            [objective]
                description=_"Death of Gawen Hagarthen"
                condition=lose
            [/objective]
            [objective]
                description=_"Death of Karen"
                condition=lose
            [/objective]
            [objective]
                description=_"The forest burns down"
                condition=lose
            [/objective]
            [objective]
                description=_"The drakes kill Quësel"
                condition=lose
            [/objective]
            {OBJECTIVE_NOTES _"Woses standing on campfires will take damage every turn."}
            {TURNS_RUN_OUT}
        [/objectives]
    [/event]

    [event]
        name=recruit
        [filter]
            side=2
            [not]
                race=drake
            [/not]
        [/filter]
        [redraw][/redraw]
        [scroll_to_unit]
            id=$unit.id
            highlight=yes
        [/scroll_to_unit]
        [lock_view][/lock_view]
        [delay]
            time=456
        [/delay]
        [unlock_view][/unlock_view]
        {MSGm_Gawen _"I thought you said that it was drakes that were attacking you?"}
        {MESSAGE (Quësel) () (Quësel) _"Well, yes, but they seem to have attracted fire-lovers of all kinds to their side..."}
        [redraw][/redraw]
    [/event]

    [event]
        name=last breath
        [filter]
            id=Quësel
        [/filter]
        [filter_second]
            side=2
        [/filter_second]
        {MESSAGE (Quësel) () (Quësel) _"They killed me!"}
    [/event] #

    [event]
        name=die
        [filter]
            id=Quësel
        [/filter]
        [filter_second]
            side=2
        [/filter_second]
        [endlevel]
            result=defeat
        [/endlevel]
    [/event] #

    # WIP: forest burning code
    # (macro copied from IftU S16)
#define ANO_BURN_SOUNDS _DELAY
    [sound]
        name="torch.ogg"
    [/sound]

    [delay]
        time={_DELAY}
    [/delay]

    [sound]
        name="wose-die.ogg"
    [/sound]
#enddef

    [event]
        name=attacker hits
        first_time_only=no
        [filter]
            side=2
            [has_attack]
                type=fire
            [/has_attack]
        [/filter]
        [filter_second]
            [filter_location]
                terrain=*^F*
            [/filter_location]
        [/filter_second]
        {ANO_BURN_SOUNDS 200}
        [terrain]
            x,y=$x2,$y2
            layer=overlay
            terrain="^Ecf"
        [/terrain]
    [/event]

#define ANO_BURN_FOREST _TERR_IN _TERR_OUT
    [event]
        name=moveto
        first_time_only=no
        [filter]
            side=2
            [has_attack]
                type=fire
            [/has_attack]
            [filter_location]
                terrain={_TERR_IN}
            [/filter_location]
        [/filter]
        {ANO_BURN_SOUNDS 200}
        [terrain]
            x,y=$x1,$y1
            terrain={_TERR_OUT}
        [/terrain]
        [cancel_action][/cancel_action]
        [break][/break]
        [return][/return]
    [/event]
#enddef

    # Order matters here, in order to avoid event-chaining:
    {ANO_BURN_FOREST Re^Ecf Rd^Dr}
    {ANO_BURN_FOREST Gd^Fdw Re^Ecf}
    {ANO_BURN_FOREST Gs^Fp Gd^Fdw}
    {ANO_BURN_FOREST Gg^Ecf Gd^Esd}
    {ANO_BURN_FOREST Gs^Ecf Rd^Esd}
    {ANO_BURN_FOREST Gd^Ecf Rd^Edt}
    {ANO_BURN_FOREST Re^Fdw Rd^Edb}

#undef ANO_BURN_FOREST

#define ANO_WOSE_DIE _TERR_IN _TERR_OUT
    [event]
        name=die
        first_time_only=no
        [filter]
            race=wose
            [filter_location]
                terrain={_TERR_IN}
            [/filter_location]
        [/filter]
        [filter_second]
            side=2
            [has_attack]
                type=fire
            [/has_attack]
        [/filter_second]
        {ANO_BURN_SOUNDS 200}
        [terrain]
            x,y=$x1,$y1
            terrain={_TERR_OUT}
        [/terrain]
    [/event]
#enddef

    # I'm listing more terrains here than we actually use,
    # just in case I modify the map more later:
    {ANO_WOSE_DIE Gg^Efm Gg} # remove flowers
    {ANO_WOSE_DIE Gs^Efm Gs} # likewise
    {ANO_WOSE_DIE Gd^Efm Gd} # likewise
    {ANO_WOSE_DIE Gg Gs} # green -> semi-dry
    {ANO_WOSE_DIE Gs Gd} # semi-dry -> dry
    {ANO_WOSE_DIE Gll Gd} # leafy -> dry
    {ANO_WOSE_DIE Gd Re} # dry -> regular dirt
    {ANO_WOSE_DIE Re Rd} # regular dirt -> dry dirt
    {ANO_WOSE_DIE Rb Rd} # dark dirt -> dry dirt
    {ANO_WOSE_DIE Rp Rr} # overgrown cobbles -> regular cobbles
    {ANO_WOSE_DIE Rr Qlf} # regular cobbles -> lava
    {ANO_WOSE_DIE Mm Md} # regular mountains -> dry mountains
    {ANO_WOSE_DIE Md Mv} # dry mountains -> volcano
    {ANO_WOSE_DIE Hh Hhd} # regular hills -> dry hills
    {ANO_WOSE_DIE Hhd Hd} # dry hills -> dunes
    {ANO_WOSE_DIE Gg^Ecf Gs^Dr}
    {ANO_WOSE_DIE Gs^Ecf Gd^Esd}
    {ANO_WOSE_DIE Gd^Ecf Rd^Dr}
    {ANO_WOSE_DIE Re^Ecf Rd^Esd}
    {ANO_WOSE_DIE Gg^Vh Gs^Vhr}
    # FIXME: reorder these events to avoid the same event-chaining problem I was experiencing
    # with the moveto events above...

#undef ANO_BURN_SOUNDS
#undef ANO_WOSE_DIE

    [event]
        name=side 3 turn
        first_time_only=no
        [harm_unit]
            [filter]
                race=wose
                [filter_location]
                    terrain=*^Ecf
                [/filter_location]
            [/filter]
            amount={ON_DIFFICULTY4 3 4 5 6}
            damage_type=fire
            kill=yes
            fire_event=yes
            animate=defender
        [/harm_unit]
    [/event]

    # TODO: checks for how much forest has been burned and inflict defeat if there are none left

    # TODO: some sort of condition to cause the elves to turn on you if you don't treat them right

    # TODO: victory event

    {ALL_ANO_DEATHS}
    {ELVISH_KILLING}
[/scenario]
